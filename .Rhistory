cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if dist_clust1<dist_clust2{
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if dist_clust1<dist_clust2{
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if dist_clust1<dist_clust2{
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if dist_clust1<dist_clust2{
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
}
return(cluster_assign)
}
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if dist_clust1<dist_clust2{
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if dist_clust1<dist_clust2{
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if (dist_clust1<dist_clust2){
cluster_assign[i]=1
}else{
cluster_assign[i]=2
}
}
return(cluster_assign)
}
centroids<-centroid_df[1:2]
X<-df[1:2]
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if (dist_clust1<dist_clust2){
cluster_assign[i]=1
}else{
cluster_assign[i]=2
}
}
return(cluster_assign)
}
get_clusts(n,centroids,X)
get_clusts(n,centroids,X)
get_clusts(n,centroids,X)
get_clusts(n,centroids,X)
dist_clust1<-NULL
dist_clust2<-NULL
cluster_assign<-NULL
get_clusts <- function(n,centroids,X){
for (i in 1:n){
x1<- X[i,]
x2<- centroids[1,]
x3<- centroids[2,]
dist_clust1<-.dist(x1,x2)
dist_clust2<-.dist(x1,x3)
if (dist_clust1<dist_clust2){
cluster_assign[i]=1
}else{
cluster_assign[i]=2
}
}
return(cluster_assign)
}
centroids<-centroid_df[1:2]
X<-df[1:2]
get_clusts(n,centroids,X)
View(df)
# your code
df<-df%>%
mutate(cluster=rep(c(1,2),each=25))
View(df)
View(df)
# your code
c1<-NULL
c2<-NULL
get_centroids() <- function(df){
if (df$cluster==1){
x1<-mean(X1)
x2<-mean(X2)
}else{
x1<-mean(X1)
x2<-mean(X2)
}
centroid_df< as.data.frame(x1,x2)
return (get_centroids )
}
View(df)
X[]
if (df$cluster==1){
x1<-mean(X1)
x2<-mean(X2)
}
if (df$cluster==1){
x1<-mean(df$X1)
x2<-mean(df$X2)
}
df[df$cluster == 1, 'X1']
# your code
x1<-NULL
x2<-NULL
get_centroids() <- function(df){
for (i in 1:2){
if (df$cluster==1){
x1[i]<- mean(df[df$cluster == 1, 'X1'])
x2[i]<- mean(df[df$cluster == 1, 'X2'])
}else{
x1[i]<- mean(df[df$cluster == 2, 'X1'])
x2[i]<- mean(df[df$cluster == 2, 'X2'])
}
}
centroid_df<-data.frame(x1,x2)
}
# your code
x1<-NULL
x2<-NULL
get_centroids() <- function(df){
if (df$cluster==1){
x1[i]<- mean(df[df$cluster == 1, 'X1'])
x2[i]<- mean(df[df$cluster == 1, 'X2'])
}else{
x1[i]<- mean(df[df$cluster == 2, 'X1'])
x2[i]<- mean(df[df$cluster == 2, 'X2'])
}
centroid_df<-data.frame(x1,x2)
}
# your code
x1<-NULL
x2<-NULL
get_centroids() <- function(df){
for (i in 1:2){
if (df$cluster==1){
x1[i]<- mean(df[df$cluster == 1, 'X1'])
x2[i]<- mean(df[df$cluster == 1, 'X2'])
}else{
x1[i]<- mean(df[df$cluster == 2, 'X1'])
x2[i]<- mean(df[df$cluster == 2, 'X2'])
}
}
centroid_df<-data.frame(x1,x2)
}
# your code
x1<-NULL
x2<-NULL
get_centroids <- function(df){
for (i in 1:2){
if (df$cluster==1){
x1[i]<- mean(df[df$cluster == 1, 'X1'])
x2[i]<- mean(df[df$cluster == 1, 'X2'])
}else{
x1[i]<- mean(df[df$cluster == 2, 'X1'])
x2[i]<- mean(df[df$cluster == 2, 'X2'])
}
}
centroid_df<-data.frame(x1,x2)
}
# your code
x1<-NULL
x2<-NULL
get_centroids <- function(df){
for (i in 1:2){
if (df$cluster==1){
x1[i]<- mean(df[df$cluster == 1, 'X1'])
x2[i]<- mean(df[df$cluster == 1, 'X2'])
}else{
x1[i]<- mean(df[df$cluster == 2, 'X1'])
x2[i]<- mean(df[df$cluster == 2, 'X2'])
}
}
centroid_df<-data.frame(x1,x2)
}
get_centroids(df)
# your code
x1<-NULL
x2<-NULL
get_centroids <- function(df){
if (df$cluster==1){
x1[1]<- mean(df[df$cluster == 1, 'X1'])
x2[1]<- mean(df[df$cluster == 1, 'X2'])
}else{
x1[2]<- mean(df[df$cluster == 2, 'X1'])
x2[2]<- mean(df[df$cluster == 2, 'X2'])
}
centroid_df<-data.frame(x1,x2)
}
get_centroids(df)
# your code
x1<-NULL
x2<-NULL
get_centroids <- function(df){
x1[1]<- mean(df[df$cluster == 1, 'X1'])
x2[1]<- mean(df[df$cluster == 1, 'X2'])
x1[2]<- mean(df[df$cluster == 2, 'X1'])
x2[2]<- mean(df[df$cluster == 2, 'X2'])
centroid_df<-data.frame(x1,x2)
}
get_centroids(df)
# your code
x1<-NULL
x2<-NULL
get_centroids <- function(df){
x1[1]<- mean(df[df$cluster == 1, 'X1'])
x2[1]<- mean(df[df$cluster == 1, 'X2'])
x1[2]<- mean(df[df$cluster == 2, 'X1'])
x2[2]<- mean(df[df$cluster == 2, 'X2'])
centroid_df<-data.frame(x1,x2)
return(centroid_df)
}
get_centroids(df)
# your code
x1<-NULL
x2<-NULL
get_centroids <- function(df){
x1[1]<- mean(df[df$cluster == 1, 'X1'])
x2[1]<- mean(df[df$cluster == 1, 'X2'])
x1[2]<- mean(df[df$cluster == 2, 'X1'])
x2[2]<- mean(df[df$cluster == 2, 'X2'])
centroid_df<-data.frame(x1,x2)%>%mutate(cluster=1:2)
return(centroid_df)
}
get_centroids(df)
View(df)
# define flag = T
centroid_df[1:2]
X<-df[1:2]
while(flag){
# TO DO: obtain new clusters
clusters<-get_clusts(n,centroids,X)
# TO DO: replace the clusters in df with the new clusters obtained above
df$cluster<-cluster
# TO DO: obtain centroids of new clusters; store into a data frame called centroid_df_new
centroid_df_new<- get_centroids(df)
# check if centroid assignments have changed
if(all_equal(centroid_df_new, centroid_df) == TRUE){
# if no: set flag = FALSE, and break out of loop
print("done")
flag <- F
} else{
# if yes: need to continue iterating
print("centroids:")
print(centroid_df_new)
centroid_df <- centroid_df_new
}
}
# define flag = T
centroid_df[1:2]
X<-df[1:2]
flag <- TRUE
while(flag){
# TO DO: obtain new clusters
clusters<-get_clusts(n,centroids,X)
# TO DO: replace the clusters in df with the new clusters obtained above
df$cluster<-cluster
# TO DO: obtain centroids of new clusters; store into a data frame called centroid_df_new
centroid_df_new<- get_centroids(df)
# check if centroid assignments have changed
if(all_equal(centroid_df_new, centroid_df) == TRUE){
# if no: set flag = FALSE, and break out of loop
print("done")
flag <- F
} else{
# if yes: need to continue iterating
print("centroids:")
print(centroid_df_new)
centroid_df <- centroid_df_new
}
}
# define flag = T
centroid_df[1:2]
X<-df[1:2]
flag <- TRUE
while(flag){
# TO DO: obtain new clusters
clusters<-get_clusts(n,centroids,X)
# TO DO: replace the clusters in df with the new clusters obtained above
df$cluster<-clusters
# TO DO: obtain centroids of new clusters; store into a data frame called centroid_df_new
centroid_df_new<- get_centroids(df)
# check if centroid assignments have changed
if(all_equal(centroid_df_new, centroid_df) == TRUE){
# if no: set flag = FALSE, and break out of loop
print("done")
flag <- F
} else{
# if yes: need to continue iterating
print("centroids:")
print(centroid_df_new)
centroid_df <- centroid_df_new
}
}
# define flag = T
flag <- TRUE
while(flag){
# TO DO: obtain new clusters
clusters<-get_clusts(n,centroid_df[1:2],df[1:2])
# TO DO: replace the clusters in df with the new clusters obtained above
df$cluster<-clusters
# TO DO: obtain centroids of new clusters; store into a data frame called centroid_df_new
centroid_df_new<- get_centroids(df)
# check if centroid assignments have changed
if(all_equal(centroid_df_new, centroid_df) == TRUE){
# if no: set flag = FALSE, and break out of loop
print("done")
flag <- F
} else{
# if yes: need to continue iterating
print("centroids:")
print(centroid_df_new)
centroid_df <- centroid_df_new
}
}
View(df)
df %>%
ggplot(aes(x = X1, y = X2, color = cluster)) +
geom_point()
View(df)
ggplot()+
geom_point(df,aes(x = X1, y = X2, color = cluster)) +
ggplot()+
geom_point(df,aes(x = X1, y = X2, color = cluster))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = cluster))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = cluster))+
geom_point(data=centroid_df,aes(x = X1, y = X2, color = cluster))
View(centroid_df)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = cluster))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = cluster))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)+
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor.cluster)+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)+
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = as.factor(cluster))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)+
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = as.factor(cluster))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = as.factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = cluster),size=4)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)+
geom_point(data= df,aes(x = X1, y = X2, shape=factor(cluster)))
View(df)
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)+
geom_point(data= df,aes(x = X1, y = X2, shape=id))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)+
geom_point(data= df,aes(x = X1, y = X2, shape=df[1:25]))
df<-df%>%
mutate(shape=ifelse( id<=25, 1,2 )
ggplot()+
df<-df%>%
mutate(shape=ifelse( id<=25, 1,2 ))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)+
geom_point(data= df,aes(x = X1, y = X2, shape=df[1:25]))
View(df)
df<-df%>%
mutate(shape=ifelse( id<=25, 1,2 ))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)+
geom_point(data= df,aes(x = X1, y = X2, shape=factor(shape)))
df<-df%>%
mutate(shape=ifelse( id<=25, 1,2 ))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster),shape=factor(shape)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)
df<-df%>%
mutate(shape=ifelse( id<=25, 1,2 ))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)+
geom_point(data= df,aes(x = X1, y = X2, shape=factor(shape)))
df<-df%>%
mutate(shape=ifelse( id<=25, 1,2 ))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster), shape=factor(shape)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)
View(df)
df<-df%>%
mutate(true_cluster=ifelse( id<=25, 1,2 ),
right=ifelse( cluster==shape, 'True','False'))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster), shape=factor(shape)))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(right)),size=4)
View(df)
df<-df%>%
mutate(true_cluster=ifelse( id<=25, 1,2 ),
right=ifelse( cluster==shape, 'True','False'))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster), shape=right))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(right)),size=4)
View(df)
df<-df%>%
mutate(true_cluster=ifelse( id<=25, 1,2 ),
right=ifelse( cluster==shape, 'True','False'))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster), shape=right))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)
df<-df%>%
mutate(true_cluster=ifelse( id<=25, 1,2 ),
right=ifelse( cluster==true_cluster, 'True','False'))
ggplot()+
geom_point(data= df,aes(x = X1, y = X2, color = factor(cluster), shape=right))+
geom_point(data=centroid_df,aes(x = x1, y = x2, color = factor(cluster)),size=4)
